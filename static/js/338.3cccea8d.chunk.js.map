{"version":3,"file":"static/js/338.3cccea8d.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAASM,IAAT,iBAAuBI,IADlB,uBACpBH,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNU,MAAOD,KAHoB,uBACvBL,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,SANmB,2CAAH,sDASjBM,EAAO,mCAAG,WAAMJ,GAAN,yFACEV,EAASM,IAAT,iBAAuBI,EAAvB,aADF,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKQ,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAMN,GAAN,yFACDV,EAASM,IAAT,iBAAuBI,EAAvB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,mHChCvB,GAAgB,KAAO,yBAAyB,KAAO,yBAAyB,UAAY,8BAA8B,IAAM,yB,SC2DhI,EArDmB,WACjB,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMV,EAAUS,EAAaf,IAAI,YAEjCiB,EAAAA,EAAAA,YAAU,WACQ,KAAZX,GAA8B,OAAZA,IAItBD,EAAAA,EAAAA,IAAkBC,GAASY,KAAKL,EACjC,GAAE,CAACP,IAEJ,IAOMa,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,kBAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfT,EAAgB,CAAEV,QAASkB,EAAKE,SAASpB,QAAQqB,QACjDH,EAAKI,OACN,EAMG,WACE,kBAAOC,KAAK,OAAOC,KAAK,aACxB,mBAAQD,KAAK,SAAb,wBAEF,eAAIE,UAAWC,EAAAA,KAAf,SACGpB,EAAOqB,KAAI,SAAAC,GAAK,OACf,eAAIH,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CACED,UAAWC,EAAAA,KACXG,GAAE,kBAAaD,EAAM9B,IACrBgC,MAAO,CAAEC,KAAMlB,GAHjB,UAKE,iBAAKY,UAAWC,EAAAA,UAAhB,WACE,gBACEM,IAAG,0CAAqCJ,EAAMK,aAC9CR,UAAWC,EAAAA,IACXQ,IAAI,oBACJC,MAAOP,EAAMO,QAEdP,EAAMO,YAbeP,EAAM9B,GADnB,QAsBxB,C","sources":["components/shared/services/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MoviesPage/moviesPage.module.css?6393","pages/MovieDetailsPage/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c0e59496318bb750168f85f3ae951021',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"moviesPage_list__m4x9B\",\"item\":\"moviesPage_item__JvfEa\",\"container\":\"moviesPage_container__6Y3Pf\",\"img\":\"moviesPage_img__0s5nX\"};","import { Link } from 'react-router-dom';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { fetchMovieByQuery } from 'components/shared/services/moviesAPI';\nimport s from './moviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const keyword = searchParams.get('keyword');\n\n  useEffect(() => {\n    if (keyword === '' || keyword === null) {\n      return;\n    }\n\n    fetchMovieByQuery(keyword).then(setMovies);\n  }, [keyword]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ keyword: form.elements.keyword.value });\n    form.reset();\n  };\n\n  const location = useLocation();\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"keyword\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul className={s.list}>\n        {movies.map(movie => (\n          <li className={s.item} key={movie.id}>\n            <Link\n              className={s.link}\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <div className={s.container}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  className={s.img}\n                  alt=\"can't find poster\"\n                  title={movie.title}\n                />\n                {movie.title}\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","fetchMovieById","id","fetchMovieByQuery","keyword","query","getCast","cast","getReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","then","location","useLocation","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","className","s","map","movie","to","state","from","src","poster_path","alt","title"],"sourceRoot":""}