{"version":3,"file":"static/js/185.ce36116f.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAASM,IAAT,iBAAuBI,IADlB,uBACpBH,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNU,MAAOD,KAHoB,uBACvBL,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,SANmB,2CAAH,sDASjBM,EAAO,mCAAG,WAAMJ,GAAN,yFACEV,EAASM,IAAT,iBAAuBI,EAAvB,aADF,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKQ,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAMN,GAAN,yFACDV,EAASM,IAAT,iBAAuBI,EAAvB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,8IChCvB,EAAuB,+BAAvB,EAAqG,iCAArG,EAA4I,8BAA5I,EAAiL,+BAAjL,EAAuN,+B,SC+DvN,EA3DyB,WAAO,IAAD,EACvBS,ECDqB,WAC3B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcE,EAAd,KACQT,GAAOU,EAAAA,EAAAA,MAAPV,GAaR,OAXAW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGb,EAAAA,EAAAA,IAAeC,GAFlB,OAEVH,EAFU,OAGhBY,EAASZ,GAHO,gDAKhBgB,QAAQC,IAAI,KAAMC,SALF,yDAAH,qDAQjBH,GACD,GAAE,CAACZ,IACGO,CACR,CDfeS,GAGRC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,IAC/BG,GAAWC,EAAAA,EAAAA,MAEjB,OACE,8BACGd,IACC,iCACE,mBACEe,UAAWC,EACXC,QAAS,kBAAMJ,EAASH,EAAf,EACTQ,KAAK,SAHP,sBAOA,iBAAKH,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXG,IAAG,0CAAqCnB,EAAMoB,aAC9CC,IAAI,MAEN,qBAASN,UAAWC,EAApB,WACE,wBAAKhB,EAAMsB,SACX,wCAAgBC,KAAKC,MAA2B,GAArBxB,EAAMyB,cAAjC,QACA,sCACA,uBAAIzB,EAAM0B,YACV,oCACA,eAAIX,UAAWC,EAAf,SACGhB,EAAM2B,OAAOC,KAAI,gBAAGnC,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,KAAP,OAChB,wBAAcA,GAALpC,EADO,aAMxB,4BACE,oDACA,gBAAIsB,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMc,GAAE,kBAAa9B,EAAMP,GAAnB,SAA8BmB,MAAO,CAAEF,KAAMA,GAArD,qBAIF,yBACE,SAAC,KAAD,CAAMoB,GAAE,kBAAa9B,EAAMP,GAAnB,WAAgCmB,MAAO,CAAEF,KAAMA,GAAvD,8BAMN,SAAC,KAAD,QAKT,C","sources":["components/shared/services/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","hooks/useFetchMovie.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c0e59496318bb750168f85f3ae951021',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieDetailsPage_list__xeLC8\",\"link\":\"MovieDetailsPage_link__rhdjc\",\"button\":\"MovieDetailsPage_button__mSHH6\",\"img\":\"MovieDetailsPage_img__+Nbrw\",\"info\":\"MovieDetailsPage_info__wQ8PP\",\"text\":\"MovieDetailsPage_text__vp0Sm\"};","import { useFetchMovie } from 'hooks/useFetchMovie';\nimport { Link, Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nimport s from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const movie = useFetchMovie();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const navigate = useNavigate();\n\n  return (\n    <>\n      {movie && (\n        <>\n          <button\n            className={s.button}\n            onClick={() => navigate(from)}\n            type=\"button\"\n          >\n            Go back\n          </button>\n          <div className={s.info}>\n            <img\n              className={s.img}\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt=\"\"\n            />\n            <section className={s.text}>\n              <h1>{movie.title}</h1>\n              <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <ul className={s.list}>\n                {movie.genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </section>\n          </div>\n          <div>\n            <h2>Additional information</h2>\n            <ul className={s.list}>\n              <li>\n                <Link to={`/movies/${movie.id}/cast`} state={{ from: from }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movie.id}/review`} state={{ from: from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieById } from 'components/shared/services/moviesAPI';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await fetchMovieById(id);\n        setMovie(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovies();\n  }, [id]);\n  return movie;\n};\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","fetchMovieById","id","fetchMovieByQuery","keyword","query","getCast","cast","getReviews","movie","useState","setMovie","useParams","useEffect","fetchMovies","console","log","message","useFetchMovie","from","useLocation","state","navigate","useNavigate","className","s","onClick","type","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","name","to"],"sourceRoot":""}