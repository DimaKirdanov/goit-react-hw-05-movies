{"version":3,"file":"static/js/160.0050fe96.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAASM,IAAT,iBAAuBI,IADlB,uBACpBH,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdI,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNU,MAAOD,KAHoB,uBACvBL,EADuB,EACvBA,KADuB,kBAMxBA,EAAKC,SANmB,2CAAH,sDASjBM,EAAO,mCAAG,WAAMJ,GAAN,yFACEV,EAASM,IAAT,iBAAuBI,EAAvB,aADF,uBACbH,EADa,EACbA,KADa,kBAEdA,EAAKQ,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAMN,GAAN,yFACDV,EAASM,IAAT,iBAAuBI,EAAvB,aADC,uBAChBH,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,qD,sIChCvB,EAA+D,uBAA/D,EAA6F,uBAA7F,EAA2H,uBAA3H,EAAwJ,sBAAxJ,EAAqL,uB,SC2CrL,EAvCiB,WACf,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQR,GAAOS,EAAAA,EAAAA,MAAPT,IAERU,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKP,EAAAA,EAAAA,IAAQJ,GAFb,OAERH,EAFQ,OAGdW,EAAQX,GAHM,gDAKde,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDAQfH,GACD,GAAE,CAACX,IAEJ,IAAMe,EAAQV,EAAKW,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACrB,gBAAIC,UAAWC,EAAf,UACGF,IACC,gBACEC,UAAWC,EACXC,IAAG,0CAAqCH,GACxCI,IAAI,MAGR,cAAGH,UAAWC,EAAd,SAAuBJ,KACvB,cAAGG,UAAWC,EAAd,SAAuBH,MATGlB,EADP,IAcvB,OACE,eAAIoB,UAAWC,EAAf,SACoB,IAAjBN,EAAMS,OACH,6CACAT,GAGT,C","sources":["components/shared/services/moviesAPI.js","webpack://goit-react-hw-05-movies/./src/pages/CastPage/castPage.module.css?5ee2","pages/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'c0e59496318bb750168f85f3ae951021',\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieByQuery = async keyword => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: keyword,\n    },\n  });\n  return data.results;\n};\n\nexport const getCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"castPage_container__GCN5m\",\"list\":\"castPage_list__OcaOG\",\"name\":\"castPage_name__2+Vuc\",\"desc\":\"castPage_desc__o16o2\",\"img\":\"castPage_img__BCr-a\",\"item\":\"castPage_item__HGCRJ\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'components/shared/services/moviesAPI';\nimport s from './castPage.module.css';\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const data = await getCast(id);\n        setCast(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  const items = cast.map(({ id, name, character, profile_path }) => (\n    <li className={s.item} key={id}>\n      {profile_path && (\n        <img\n          className={s.img}\n          src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n          alt=\"\"\n        ></img>\n      )}\n      <p className={s.name}>{name}</p>\n      <p className={s.desc}>{character}</p>\n    </li>\n  ));\n\n  return (\n    <ul className={s.list}>\n      {items.length === 0\n        ? \"We don't have any information about actors\"\n        : items}\n    </ul>\n  );\n};\n\nexport default CastPage;\n"],"names":["instance","axios","baseURL","params","api_key","getTrending","get","data","results","fetchMovieById","id","fetchMovieByQuery","keyword","query","getCast","cast","getReviews","useState","setCast","useParams","useEffect","fetchCast","console","log","message","items","map","name","character","profile_path","className","s","src","alt","length"],"sourceRoot":""}